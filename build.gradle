plugins {
	id 'org.springframework.boot' version '2.4.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'com.google.cloud.tools.jib' version '1.8.0'
	id 'java'
	id 'jacoco'
}

group = 'io.jrb.labs'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2020.0.1")
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencies {
	implementation 'com.github.java-json-tools:json-patch:1.12'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'io.r2dbc:r2dbc-h2'

	implementation 'io.jrb.labs:ms-core-java:0.2.1'

	runtimeOnly 'com.h2database:h2'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
	jacoco {
		destinationFile = file("$buildDir/jacoco/jacoco.exec")
	}
}

jib {
	to {
		image "brulejr/tasks-ms-r2dbc-java"
		auth {
			// retrieve from Jenkins
			username "${System.env.DOCKERHUB_CREDENTIALS_USR}"
			password "${System.env.DOCKERHUB_CREDENTIALS_PSW}"
		}
	}
}
